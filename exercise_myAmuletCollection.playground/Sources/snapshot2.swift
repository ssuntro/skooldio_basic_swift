//
//  snapshot2.swift
//  
//
//  Created by Siroratt Suntronsuk on 5/5/2568 BE.
//



import Foundation

enum AmuletCategory {
    case coin = "‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç"
    case powder = "‡∏û‡∏£‡∏∞‡∏ú‡∏á"
    case statue = "‡∏û‡∏£‡∏∞‡∏Å‡∏£‡∏¥‡πà‡∏á"
}

extension AmuletCategory {
    init?(from raw: String) {
        guard let a = AmuletCategory(rawValue: raw) else { return nil }
        self = a
    }
    var icon: String {
        switch self {
        case .coin: return "üêõ"
        case .powder: return "‚ÑπÔ∏è"
        case .statue: return "‚ö†Ô∏è"
        }
    }

}

struct Amulet {
    let name: String
    let year: Int
    let temple: String
    var price: Double
    let category: AmuletCategory
    init(name: String, year: Int, temple: String, price: Double, category: String) {
        self.name = name
        self.year = year
        self.temple = temple
        self.price = price
        self.category = AmuletCategory.init(from: category) ?? AmuletCategory.coin //AmuletCategory.init(rawValue:...)
    }
}


// TODO: ‡∏™‡∏£‡πâ‡∏≤‡∏á ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà copy

extension Amulet: Hashable {
    static func == (lhs: Amulet, rhs: Amulet) -> Bool {
        // TODO: ‡∏™‡∏£‡πâ‡∏≤‡∏á logic ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏ß‡πà‡∏≤ 2 Amulet instances ‡∏Ñ‡∏∑‡∏≠‡∏û‡∏£‡∏∞‡∏ä‡∏¥‡πâ‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô ‡∏ä‡∏¥‡πâ‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤‡∏à‡∏≤‡∏Å ‡∏ä‡∏∑‡πà‡∏≠ ‡πÅ‡∏•‡∏∞‡∏õ‡∏µ ‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏î‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô
    }
}
